version: '3.8'

services:
  auth:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-service-prod
    ports:
      - "8080:8080"
    environment:
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - TWO_FACTOR_API_KEY=${TWO_FACTOR_API_KEY}
      - OTP_TEMPLATE_NAME=${OTP_TEMPLATE_NAME}
      - RATE_LIMIT_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-5}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PORT=${PORT:-8080}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - APP_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - auth-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7.2-alpine
    container_name: auth-redis-prod
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: >
      sh -c "
        if [ -n \"$$REDIS_PASSWORD\" ]; then
          redis-server --requirepass \"$$REDIS_PASSWORD\" --appendonly yes --save 900 1 --save 300 10 --save 60 10000
        else
          redis-server --appendonly yes --save 900 1 --save 300 10 --save 60 10000
        fi
      "
    networks:
      - auth-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    volumes:
      - redis-data:/data
      - redis-config:/usr/local/etc/redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis-data:
    driver: local
  redis-config:
    driver: local

networks:
  auth-network:
    driver: bridge 